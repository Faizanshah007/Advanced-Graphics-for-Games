Tutorial 7

1) As you’ve probably realised, plane / sphere checking, although very fast is not ideal for every typeof  shape  -  there’s  a  lot  of  wasted  space  in  the  bounding  sphere  for  the  stained  glass  windows,  forexample.  Investigate bounding boxes, specifically Object Oriented Bounding Boxes, and Axis AlignedBounding Boxes.  Perhaps there should be an abstractBoundingVolumeclass, from which aBound-ingSphereclass derives from...

2) A popular way of increasing rendering performance is to make a node’s bounding area large enoughto envelope all of its children, allowing all child nodes of a node outside of a frustum to be quicklyculled. How would you implement this? Scene graph traversals can go upwards from aleafto theroot...

Tutorial 9

3)  InvestigateTexture  Buffer  Objects,  andUniform  Buffer  Objects-  two  methods  of  stor-ing arbitrary data in graphics memory.  Could they be used to perform vertex skinning?  What mightthe advantages and disadvantages of these methods be?

4)  The  tutorial  code  only  moves  forward  one  whole  frame  at  a  time  -  if  you  were  to  change  line48 of the tutorialRendererclass to only subtractdt*0.1f,  you’d see this effect more clearly.  Howwould you go about interpolating between two frames of animation?  Interpolation of a translationis straightforward, but what about the rotations in a matrix?  Investigate what other mathematicalconstructs can be created in the codebase, and how they might help with this.

Tutorial 10

2) Games sometimes simulate a ’double vision’ effect when the player character is hit.  You shouldbe able to replicate such an effect as a post process filter, by taking two samples - one at the normalposition, and one from somewhere nearby.

3)  Try  adding  multipleCamerasto  the  scene,  and  rendering  each  camera’s  viewpoint  to  an  FBOattachment.  You should be able to draw each viewpoint on screen as a quad,  to create a multipleviewpoint effect.  Or perhaps draw from a top down viewpoint to use as an on-screen map?

Tutorial 11

5)  If  you’re  feeling  particularly  brave,  you  might  want  to  try  having  aspotlightthat  casts  light  ina cone, rather than a sphere.  You’ll still need a radius value to calculate distance, but you’ll also needa function to set the angle of the cone, and a direction vector, too.  How would you work out whetherthe fragment is inside the spotlight cone?  Dot products may come in useful, here...

Tutorial 12

2) In the last tutorial, there was brief mention of gloss maps - a way of defining the specular power ona per pixel level.  Try making a gloss map for the ground texture used for the height map - remember,the higher the value, the ’tighter’ the reflections will appear!  How many channels of a texture wouldbe used?  What could go in the others?

Tutorial 13

1) Last tutorial you were introduced tobump  maps.  The water texture used in this tutorial has abump map in theTexturesfolder, calledwaterbump.png.  How would you modify the cubemap reflec-tion shader to make use of this bump map?
/*
2)  By  using  the  quad  mesh  and  modifying  the  skybox  shader,  you  should  be  able  to  add  a  per-fectly reflecting mirror in your scene.  Or, perhaps it’s a portal to somewhere else?  The quad doesn’tnecessarily have to use the same cubemap as the skybox...
3) In the example program, the heightmap is drawn on top of the skybox.  That can result in quitea lot ofoverdraw,  where pixels are drawn multiple times in a frame.  Can you think of any way ofreducing this overdraw?  Investigate how the stencil buffer introduced in tutorial 5 could be used todo this.
4) Take a look at http://brainwagon.org/2002/12/05/fun-with-environment-maps/
*/

Tutorial 14

5) For far-off light sources such as the sun, games will sometimes use an orthographic matrix, ratherthan a  perspective.  Try moving the light  source a  little further away,  and see  if you  can make  anappropriate orthographic projection to fill the shadow map.
